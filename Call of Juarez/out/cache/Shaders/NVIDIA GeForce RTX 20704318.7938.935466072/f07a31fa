˙1zy 
                    #include<Functions.hlsl>
                    

                    Texture2D sBackbuffer;
                    SamplerState samBackbuffer;
                    #if defined(USE_COLOR0)
                        Texture2D     sColor0;
                        SamplerState     samColor0;
                        #if defined(USE_COLOR1)
                            Texture2D     sColor1;
                            SamplerState     samColor1;
                        #endif
                    #endif

                    struct pixelInput
                    {
						float4  vPosition           : SV_POSITION;

                        #if defined(USE_FXCOLORTRANSLUCENCY)
                            #define HALF_vExtinction float4
                        #else
                            #define HALF_vExtinction float3
                        #endif

                        #if defined(USE_BLENDMODEMUL)
                            HALF_vExtinction  vExtinction     : TEXCOORD0; //TODO w to alphatestu
                            float3  vInscattering   : TEXCOORD1;
                            #if defined(USE_COLOR0)
                                float2  uvTexcoord0     : TEXCOORD2;
                                #if defined(USE_COLOR1)
                                    float2  uvTexcoord1     : TEXCOORD3;
                                    #if defined(USE_DEPTHBLENDING)
                                        float vDepth         : TEXCOORD4;
                                    #endif
                                #elif defined(USE_DEPTHBLENDING)
                                    float vDepth        : TEXCOORD3;
                                #endif
                            #elif defined(USE_DEPTHBLENDING)
                                float vDepth        : TEXCOORD2;
                            #endif
                        #elif defined(USE_BLENDMODEADDRGBMULALPHA)
                            float4  vExtinction     : TEXCOORD0;
                            float4  vInscattering   : TEXCOORD1;
                            #if defined(USE_COLOR0)
                                float2  uvTexcoord0     : TEXCOORD2;
                                #if defined(USE_COLOR1)
                                    float2  uvTexcoord1     : TEXCOORD3;
                                    #if defined(USE_DEPTHBLENDING)
                                        float vDepth         : TEXCOORD4;
                                    #endif
                                #elif defined(USE_DEPTHBLENDING)
                                    float vDepth        : TEXCOORD3;
                                #endif
                            #elif defined(USE_DEPTHBLENDING)
                                float vDepth        : TEXCOORD2;
                            #endif
                        #elif defined(USE_BLENDMODEADD)
                            float4  vExtinction     : COLOR0; //TODO w to alphatestu
                            #if defined(USE_COLOR0)
                                float2  uvTexcoord0     : TEXCOORD0;
                                #if defined(USE_COLOR1)
                                    float2  uvTexcoord1     : TEXCOORD1;
                                    #if defined(USE_DEPTHBLENDING)
                                        float vDepth         : TEXCOORD2;
                                    #endif
                                #elif defined(USE_DEPTHBLENDING)
                                    float vDepth        : TEXCOORD1;
                                #endif
                            #elif defined(USE_DEPTHBLENDING)
                                float vDepth        : TEXCOORD0;
                            #endif
                        #else
                            float4  vExtinction     : COLOR0; //TODO w to alphatestu
                            float4  vInscattering   : TEXCOORD0;
                            #if defined(USE_COLOR0)
                                float2  uvTexcoord0     : TEXCOORD1;
                                #if defined(USE_COLOR1)
                                    float2  uvTexcoord1     : TEXCOORD2;
                                    #if defined(USE_DEPTHBLENDING)
                                        float vDepth         : TEXCOORD3;
                                    #endif
                                #elif defined(USE_DEPTHBLENDING)
                                    float vDepth        : TEXCOORD2;
                                #endif
                            #elif defined(USE_DEPTHBLENDING)
                                float vDepth        : TEXCOORD1;
                            #endif
                        #endif
//                        float2 uvBackbuffer: VPOS;
                        float4 uvBackbuffer: SV_POSITION;
                    };

                    void main( in pixelInput input, out float4 output : SV_TARGET )
                    {
                        float4 vDepthBack = sBackbuffer.Sample(samBackbuffer, (input.uvBackbuffer.xy + 0.5) * BACKBUFFER_PARAMS.xy );
                        float vDepthMask = saturate( linearstep( 0, DEPTHFACTOR, vDepthBack.w - input.vDepth  ) );
//vDepthMask = 1.0f;

                        #if defined(USE_COLOR0)
                            output = sColor0.Sample( samColor0, input.uvTexcoord0.xy );
                            #if defined(USE_COLOR1)
                                float4 vColor1 = sColor1.Sample( samColor1, input.uvTexcoord1.xy );
                                #if defined(USE_MIXMODEMUL)
                                    output *= vColor1;
                                #elif defined(USE_BLENDMODEADD)
                                    output += vColor1;
                                #endif
                            #endif
                            #if defined(USE_BLENDMODEADD)
                                output.xyz *= input.vExtinction.xyz;
                                output.xyz *= vDepthMask;
                                output.w = saturate(dot( float3(0.3333, 0.3333, 0.3333), output.xyz ) );
                                #if defined(USE_FXCOLORTRANSLUCENCY)
                                    output.w = saturate( output.w - input.vExtinction.w );
                                #endif
                            #elif defined(USE_BLENDMODEMUL)
                                #if defined(USE_FXCOLORTRANSLUCENCY)
                                    output.w = saturate(dot( float3(0.3333, 0.3333, 0.3333), output.xyz ) );
                                    output.w = saturate(  input.vExtinction.w - output.w  );
                                    output.xyz = saturate( output.xyz * input.vExtinction.xyz + input.vInscattering.xyz );
                                #else
                                    output.xyz = saturate( output.xyz * input.vExtinction.xyz + input.vInscattering.xyz );
                                    output.w = saturate(dot( float3(1.0, 1.0, 1.0), output.xyz ) );
                                #endif
                            #elif defined(USE_BLENDMODEADDRGBMULALPHA)
                                output = output * input.vExtinction + input.vInscattering;
                                output.w = saturate( output.w ); //mul
                            #else
                                #if defined(USE_FXCOLORTRANSLUCENCY)
                                    output.xyz = output.xyz * input.vExtinction.xyz + input.vInscattering.xyz;
                                    clip( output.w - input.vInscattering.w );
                                    output.w = saturate( output.w * input.vExtinction.w );
                                #else
                                    output = output * input.vExtinction + input.vInscattering;
                                #endif
//                                output.w *= vDepthMask;
                                output.w = saturate(vDepthMask * output.w);
                            #endif
                        #else
                            output = input.vExtinction;
                        #endif
                    }
                ¨  DXBCË÷d?lÚáwN≥$˘˛Xò   ¨     4   ®  L  Ä  4  RDEFl     Ù          ˇˇ   F  º                                                          ‘                          ‡                         Ë                              samBackbuffer samColor0 sBackbuffer sColor0 $Globals ´´´Ë   Æ     P          \      @       t      Ñ  @   @       t      õ  Ä   @       t      ≤  ¿   @       t      …     @       t      ‡  @  @       t      ˜  Ä                 ê               .  †               9  ∞  @       t      H    @       t      X  0  @       t      g  p  @       t      s  ∞  @       t      ~    @       t      è  0  @       t      û  p              ∞  Ä               µ  ê         ƒ      ‘  †         ƒ      „  ∞                 ¿               ˇ  –                 ‡                   @       t      ,  0  @       t      =  p  @       t      N  ∞  @       t      _    @       t      s  0  @       t      â  p  @       t      ü  ∞  @       t      µ           ƒ      ¬            ƒ      —                 ﬁ                  Ì  0               ¸  @                 P  @       t        ê  @       t      +  –  @       t      <    @       t      M  P  @       t      a  ê  @       t      w  –  @       t      ç    @       t      £  P         ƒ      Ø  `         ƒ      Ω  p         ƒ      À  Ä         ƒ      Ÿ  ê               Á  †               ı  ∞  ê       ¸        @	  @             (  Ä	               0  ê	               8  †	               @  ∞	               H  ¿	               P  –	               X  ‡	               `  	               h   
               p  
               x   
               Å  0
               ä  @
               ì  P
               ú  `
               •  p
               Æ  Ä
               ∑  ê
               ¿  †
  @             …  ‡
               “  
               €     @             ‰  @  @             Ì  Ä  @             ˆ  ¿  @             ˇ                                                       0               #  @               ,  P               E  `               [  p               q  Ä               á  ê               ù  †         ¥      ƒ  ®         ¥      Ÿ  ∞         ¥      Ó  ∏         ¥        ¿         ¥         »         ¥      9  –               B  ‡               K                 T                  ]                 f                  ~  0               â  @               ö  P               ß  `               ≥  p  @             ∏  ∞         ƒ      ‘  ¥         ƒ      ‚  ∏         ƒ        º         ƒ      ˛  ¿         ƒ        ƒ         ƒ        »         ƒ      .  Ã         ƒ      ?  –         ƒ      T  ‘         ƒ      h  ÿ         ƒ      y  ‹         ƒ      ó  ‡               £                 ∞            ƒ      º           ƒ                  ‡                 ‡                  ‡                 ‡      #           ‡      8           ƒ      I                  R  0               b  @               r  P               Ä  `               å  p         ƒ      û  t         ƒ      ¥  x         ƒ      Ã  |         ƒ      ÿ  Ä         ƒ      „  Ñ         ƒ      Ú  à         ƒ        å         ƒ        ê         ƒ      %  î         ƒ      :  ò         ƒ      P  ú         ƒ      f  †         ƒ      x  ∞         ƒ      à  º         ƒ      õ  ¿         ƒ      ™  ƒ         ƒ      ∫  »         ƒ      …  Ã         ƒ      €  –         ƒ      Ì  ‘         ƒ      ˇ  ÿ         ƒ        ‹         ƒ      #  ‡         ƒ      5  ‰         ƒ      G  Ë         ƒ      Y  Ï         ƒ      k           ƒ      u  Ù         ƒ      Ç  ¯         ƒ      î  ¸         ƒ      ¶            ƒ      ∏           ƒ                  ƒ      ‹           ƒ      Ó           ƒ                  ƒ                 ƒ      &                  4  0         ƒ      <  @               SHADOW_XFORM_BIAS_WS_0 ´           SHADOW_XFORM_BIAS_WS_1 SHADOW_XFORM_BIAS_WS_2 SHADOW_XFORM_BIAS_MS_0 SHADOW_XFORM_BIAS_MS_1 SHADOW_XFORM_BIAS_MS_2 POSITION_BIAS_SCALE ´           NRM_TAN_TEX_SCALE FOG_PARAMS COMBINED_XFORM MODELVIEW_XFORM INVMODEL_XFORM MODEL_XFORM VIEW_XFORM PROJECTION_XFORM VIEWPROJ_XFORM BACKBUFFER_PARAMS TIME LIGHT_DIR_MS ´´           LIGHT_DIR_MS_0 LIGHT_POS_MS LIGHT_POS_MS_0 LIGHT_POS_MS_1 LIGHT_POS_MS_2 LIGHT_XFORM_MS LIGHT_XFORM_MS_0 LIGHT_XFORM_MS_1 LIGHT_XFORM_MS_2 LIGHT_XFORM_BIAS_MS LIGHT_XFORM_BIAS_MS_0 LIGHT_XFORM_BIAS_MS_1 LIGHT_XFORM_BIAS_MS_2 LIGHT_DIR_WS LIGHT_DIR_WS_0 LIGHT_POS_WS LIGHT_POS_WS_0 LIGHT_POS_WS_1 LIGHT_POS_WS_2 LIGHT_XFORM_WS LIGHT_XFORM_WS_0 LIGHT_XFORM_WS_1 LIGHT_XFORM_WS_2 LIGHT_XFORM_BIAS_WS LIGHT_XFORM_BIAS_WS_0 LIGHT_XFORM_BIAS_WS_1 LIGHT_XFORM_BIAS_WS_2 LIGHT_COLOR LIGHT_COLOR_0 LIGHT_COLOR_1 LIGHT_COLOR_2 CAMERA_POS_MS CAMERA_POS_WS ENV_SH     	       SCATTERING ´           CONST_0 CONST_1 CONST_2 CONST_3 CONST_4 CONST_5 CONST_6 CONST_7 CONST_8 CONST_9 CONST_10 CONST_11 CONST_12 CONST_13 CONST_14 CONST_15 CONST_16 CONST_17 CONST_18 CONST_22 CONST_23 CONST_24 CONST_28 CONST_32 CONST_36 CONST_40 CONST_41 CONST_42 CONST_43 CONST_90 TEX_INV_SIZE_NRM_sColor0 TEX_SIZE_NRM_sHeight0 TEX_SIZE_NRM_sHeight1 TEX_SIZE_NRM_sHeight2 TEX_SIZE_NRM_sHeight3 TEX_SIZE_sShadowMap0 ´´           TEX_SIZE_sShadowMap1 TEX_SIZE_sShadowMap2 TEX_INV_SIZE_sShadowMap0 TEX_INV_SIZE_sShadowMap1 TEX_INV_SIZE_sShadowMap2 aNGQuad0 aNGQuad1 aNGQuad2 aNGQuad3 vNGRange grass_wind_force_params grass_wave grass_wind_force grass_params ngPlayerPos quad water_level             terrain_inv_x terrain_inv_y terrain_inv_z fShadowmap0Bias fShadowmap1Bias fShadowmap2Bias fHDRSunIntensity fhdrambientintensity fHDRLightsIntensity fHDRSkyIntensity fHDRSelfIlluminationIntensity vGlowParams vColorParams fBulletTime fPlayerDamage iUseWaterReflection ´´            iUseWaterBorder iUseWaterSpecular iUseWaterFresnel iUseWaterWavesNumber fGrassSizeFactor vAmbient vTerrainDetail0 vTerrainDetail1 vTerrainCliff vWaterColor fWaterBaseOpacity fWaterReflDeformPower fWaterPlantsDeformPower fWaterDepth fWindPower fFakeBumpPower fRefractionPower fDiffuseGlow fGrassColormapScaleX fGrassColormapScaleY fGrassColormapOffsetX fGrassColormapOffsetY vWindCurrentForce vWindInitialDir fUndergrowthHeight fTopDetailSize fSideDetailSize fDetailsBorder fUndergrowthScale fWaterWave1ScaleX fWaterWave1ScaleY fWaterWave2ScaleX fWaterWave2ScaleY fWaterWave1SpeedX fWaterWave1SpeedY fWaterWave2SpeedX fWaterWave2SpeedY fSkyScale fSkyScaleHDR fSkyCloudsL0Scale fSkyCloudsL0Speed fSkyCloudsL1Scale fSkyCloudsL1Speed fSkyCloudsL2Scale fSkyCloudsL2Speed fSkyHorizonScaleH fSkyHorizonScaleV fSkyBackgroundScale vHorizonColor vSunDir vSunColor Microsoft (R) HLSL Shader Compiler ´´´ISGNú         Ä                   å                   í                   í                  í                  SV_POSITION COLOR TEXCOORD ´OSGN,                               SV_TARGET ´´SHDR¨  @   k   d  2        b Ú    b Ú    b 2    b B    e  Ú      Y  Fé      ı   X  p     UU  Z   `     X  p    UU  Z   `    h        
2      F     @     ?   ?        8  2      F      FÄ      7   E  	Ú      F      F~      `              :      *ÄA      E  	Ú     F    F~     `    2  	Ú     F    F    F    8  Ç      
      :     6  r      F    >  STATp   	                                                                                                         m   USE_DEPTHBLENDING 1.000000 USE_COLOR0 1 USE_BLENDMODELERP 1 SHADOW_QUALITY 3 HSM_MODE 1 DEPTHFACTOR 1.000000              &   (   :   <   K   M   V   X   d    Ô;    P  P  Æ                         @                    @   @                    Ä   @                     ¿   @                       @                    @  @    2                 Ä      3                 ê      '                 †                       ∞  @                       @           #          0  @            '          p  @           +          ∞  @           /            @           3          0  @    (       7          p     !       8          Ä      	       9          ê      	       :          †             ;          ∞             <          ¿             =         –             >         ‡             ?            @           C          0  @           G         p  @           K         ∞  @           O            @           S          0  @           W         p  @           [         ∞  @    
       _                
       `                        a                       b                        c         0             d         @             e          P  @           i          ê  @           m         –  @           q           @           u          P  @           y          ê  @           }         –  @           Å           @           Ö          P             Ü          `             á         p             à         Ä             â          ê             ä          †             ã   	       ∞  ê    $       î          @	  @    #       ò          Ä	      #       ô         ê	      #       ö         †	      #       õ         ∞	      #       ú         ¿	      #       ù         –	      #       û         ‡	      #       ü         	      #       †          
      #       °      	   
      #       ¢      
    
      #       £         0
      #       §         @
      #       •         P
      #       ¶         `
      #       ß         p
      #       ®         Ä
      #       ©         ê
      #       ™         †
  @    #       Æ         ‡
      #       Ø         
      #       ∞            @    #       ¥         @  @    #       ∏          Ä  @    #       º      $   ¿  @    #       ¿      (          #       ¡      )         #       ¬      *          #       √      +   0      #       ƒ      Z   @      +       ≈         P      ,       ∆          `      ,       «          p      ,       »          Ä      ,       …          ê      0                  †      0                  ®      0       À          ∞      1       À          ∏      1       Ã          ¿      1       Ã          »      ˇˇˇˇ    angquad0    Õ          –     ˇˇˇˇ    angquad1    Œ          ‡     ˇˇˇˇ    angquad2    œ               ˇˇˇˇ    angquad3    –                ˇˇˇˇ    vngrange    —               ˇˇˇˇ    grass_wind_force_params    “                ˇˇˇˇ   
 grass_wave    ”          0     ˇˇˇˇ    grass_wind_force    ‘          @     ˇˇˇˇ    grass_params    ’          P     ˇˇˇˇ    ngplayerpos    ÷          `     ˇˇˇˇ    quad    ◊          p  @   ˇˇˇˇ    water_level    €          ∞     ˇˇˇˇ    terrain_inv_x    €          ¥     ˇˇˇˇ    terrain_inv_y    €          ∏     ˇˇˇˇ    terrain_inv_z    €          º     ˇˇˇˇ    fshadowmap0bias    ‹          ¿     ˇˇˇˇ    fshadowmap1bias    ‹          ƒ     ˇˇˇˇ    fshadowmap2bias    ‹          »     ˇˇˇˇ    fhdrsunintensity    ‹          Ã     ˇˇˇˇ    fhdrambientintensity    ›          –     ˇˇˇˇ    fhdrlightsintensity    ›          ‘     ˇˇˇˇ    fhdrskyintensity    ›          ÿ     ˇˇˇˇ    fhdrselfilluminationintensity    ›          ‹     ˇˇˇˇ    vglowparams    ﬁ          ‡     ˇˇˇˇ    vcolorparams    ﬂ               ˇˇˇˇ    fbullettime    ‡                ˇˇˇˇ    fplayerdamage    ‡               ˇˇˇˇ    iusewaterreflection    ‡               ˇˇˇˇ    iusewaterborder    ‡               ˇˇˇˇ    iusewaterspecular    ·               ˇˇˇˇ    iusewaterfresnel    ·               ˇˇˇˇ    iusewaterwavesnumber    ·               ˇˇˇˇ    fgrasssizefactor    ·               ˇˇˇˇ    vambient    ‚                ˇˇˇˇ    vterraindetail0    „          0     ˇˇˇˇ    vterraindetail1    ‰          @     ˇˇˇˇ    vterraincliff    Â          P     ˇˇˇˇ    vwatercolor    Ê          `     ˇˇˇˇ    fwaterbaseopacity    Á          p     ˇˇˇˇ    fwaterrefldeformpower    Á          t     ˇˇˇˇ    fwaterplantsdeformpower    Á          x     ˇˇˇˇ    fwaterdepth    Á          |     ˇˇˇˇ   
 fwindpower    Ë          Ä     ˇˇˇˇ    ffakebumppower    Ë          Ñ     ˇˇˇˇ    frefractionpower    Ë          à     ˇˇˇˇ    fdiffuseglow    Ë          å     ˇˇˇˇ    fgrasscolormapscalex    È          ê     ˇˇˇˇ    fgrasscolormapscaley    È          î     ˇˇˇˇ    fgrasscolormapoffsetx    È          ò     ˇˇˇˇ    fgrasscolormapoffsety    È          ú     ˇˇˇˇ    vwindcurrentforce    Í          †     ˇˇˇˇ    vwindinitialdir    Î          ∞     ˇˇˇˇ    fundergrowthheight    Î          º     ˇˇˇˇ    ftopdetailsize    Ï          ¿     ˇˇˇˇ    fsidedetailsize    Ï          ƒ     ˇˇˇˇ    fdetailsborder    Ï          »     ˇˇˇˇ    fundergrowthscale    Ï          Ã     ˇˇˇˇ    fwaterwave1scalex    Ì          –     ˇˇˇˇ    fwaterwave1scaley    Ì          ‘     ˇˇˇˇ    fwaterwave2scalex    Ì          ÿ     ˇˇˇˇ    fwaterwave2scaley    Ì          ‹     ˇˇˇˇ    fwaterwave1speedx    Ó          ‡     ˇˇˇˇ    fwaterwave1speedy    Ó          ‰     ˇˇˇˇ    fwaterwave2speedx    Ó          Ë     ˇˇˇˇ    fwaterwave2speedy    Ó          Ï     ˇˇˇˇ   	 fskyscale    Ô               ˇˇˇˇ    fskyscalehdr    Ô          Ù     ˇˇˇˇ    fskycloudsl0scale    Ô          ¯     ˇˇˇˇ    fskycloudsl0speed    Ô          ¸     ˇˇˇˇ    fskycloudsl1scale                    ˇˇˇˇ    fskycloudsl1speed                   ˇˇˇˇ    fskycloudsl2scale                   ˇˇˇˇ    fskycloudsl2speed                   ˇˇˇˇ    fskyhorizonscaleh    Ò               ˇˇˇˇ    fskyhorizonscalev    Ò               ˇˇˇˇ    fskybackgroundscale    Ò               ˇˇˇˇ    vhorizoncolor    Ú                ˇˇˇˇ    vsundir    Û          0     ˇˇˇˇ   	 vsuncolor    Ù          @                                   Lig               (i(               ¿Õü     samBackbuffer	 samColor0                             sBackbuffer sColor0                            